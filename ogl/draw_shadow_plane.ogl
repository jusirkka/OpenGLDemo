clear color_buffer_bit | depth_buffer_bit | stencil_buffer_bit

From "create progs" import prog_phong, prog_shadow
From "init textures" import tex_checker, tex_french
From "" import time

useprogram prog_phong

Real z_light = 20 + 15*sin(0.1*time)
Real r_light = 20
Real phi_light = 0.01 * time
Shared Vector light_direction = vec(r_light * cos(phi_light), r_light * sin(phi_light), z_light, 0)

Execute "draw lights"

Real x_d = 2*cos(0.1*time)
Real y_d = 2*sin(0.1*time)
Matrix model_dodeca = scaling(2, 2, 2) * translation(vec(x_d, y_d, 0, 1))
Real sc = 50
Matrix c = scaling(sc, sc, sc) * translation(vec(-1, -1, -1, 1))
Matrix model_square =  c * translation(vec(1, 1, -0.25, 1))
Shared Vector plane_normal = normal_transform(model_square) * vec(0, 0, 1, 1)
Shared Vector point_in_plane = model_square * vec(0, 0, 1, 1)
Matrix reflect = reflection(plane_normal, point_in_plane)
// ambient, diffuse, specular, unused
Matrix dodeca_colors = mat(vec(.3, .1, .1, 0),vec(.1, .5, .1, 0), vec(.6, .4, .1, 0), vec(0, 0, 0, 0))
Natural dodeca_tex = tex_french
Real dodeca_tex_scale = 4
Real dodeca_spec_exp = 5

Shared Matrix model_matrix, model_colors
Shared Text model_name
Shared Natural model_tex
Shared Real model_tex_scale, model_spec_exp


// set stencil = 1 where plane is
disable depth_test
colormask 0, 0, 0, 0
enable stencil_test
stencilop replace, replace, replace
stencilfunc always, 1, 0xff

model_matrix = model_square
model_name = "square"
Execute "draw model"

enable depth_test
colormask 1, 1, 1, 1

// remove reflection elsewhere except the plane
stencilfunc equal, 1, 0xff
stencilop keep, keep, keep

// reflection
model_matrix = reflect * model_dodeca
model_colors = dodeca_colors
model_name = "dodeca"
model_tex = dodeca_tex
model_tex_scale = dodeca_tex_scale
model_spec_exp = dodeca_spec_exp

cullface front
From "get locations" import u_v_light
From "" import camera
uniform4f u_v_light, camera * normal_transform(reflect) * light_direction
Execute "draw model"
cullface back

disable stencil_test

uniform4f u_v_light, camera*light_direction

// z=1 plane

disable cull_face
enable stencil_test
stencilfunc always, 3, 0xff
stencilop keep, keep, replace
enable blend
blendcolor vec(0, 0, 0, 0.7)

model_name = "square"
model_matrix = model_square
model_colors = mat(vec(.1, .1, .1, 0), vec(.0, .0, .7, 0), vec(.2, .2, .2, 0), vec(0, 0, 0, 0))
model_tex = tex_checker
model_tex_scale = sc / 10
model_spec_exp = 25
Execute "draw model"

enable cull_face
disable stencil_test
disable blend

model_name = "dodeca"
model_matrix = model_dodeca
model_colors = dodeca_colors
model_tex = dodeca_tex
model_tex_scale = dodeca_tex_scale
model_spec_exp = dodeca_spec_exp
Execute "draw model"


useprogram prog_shadow

enable blend
blendcolor vec(0, 0, 0, 0.2)

enable polygon_offset_fill
polygonoffset -0.5, 0

enable stencil_test

stencilfunc less, 2, 0xff
stencilop replace, replace, replace
Execute "draw shadow"

disable blend
disable polygon_offset_fill
disable stencil_test



