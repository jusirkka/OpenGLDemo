Shared Natural prog

Natural f_shader, v_shader
Text f_src, v_src


v_src = "
attribute vec4 vertex;
attribute vec3 normal;
attribute vec2 tex;

uniform  mat4 n_matrix;
uniform  mat4 vm_matrix;
uniform  mat4 pvm_matrix;
uniform  vec4 light;
uniform float specular;

varying vec4 cosines;
varying vec2 texcoord;

void main(void) {

    texcoord = tex;

    vec4 N = normalize(n_matrix * vec4(normal, 0));
    vec4 V = vec4(normalize((vm_matrix * vertex).xyz), 1);

    cosines = vec4(1, max(0, dot(N,light)), pow(max(0, dot(V, reflect(light, N))), specular), 0);
    gl_Position = pvm_matrix * vertex;
}
"

f_src = "
uniform  mat4 material_colors;
uniform  mat4 light_colors;
uniform float scale;

uniform sampler2D img;

varying vec2 texcoord;
varying vec4 cosines;

void main(void) {

    mat4 M = matrixCompMult(light_colors, material_colors);
    gl_FragColor = texture2D(img, texcoord * scale) +  M * cosines;
}
"


f_shader = createshader(fragment_shader)
compileshader f_shader, f_src

v_shader = createshader(vertex_shader)
compileshader v_shader, v_src

prog = createprogram()
attachshader prog, v_shader
attachshader prog, f_shader
linkprogram prog
