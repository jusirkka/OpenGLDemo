Shared Var a_vertex, a_normal, a_tex: Natural
Shared Var u_t_img,  u_m_n, u_m_vm, u_m_pvm, u_v_light: Natural
Shared Var u_m_material_colors,  u_m_light_colors: Natural
Shared Var u_s_shininess, u_s_scale: Natural

From "create progs" import prog_phong, prog_shadow


u_m_n = getuniformlocation(prog_phong, "n_matrix")
u_m_vm = getuniformlocation(prog_phong, "vm_matrix")
u_m_pvm = getuniformlocation(prog_phong, "pvm_matrix")
u_v_light = getuniformlocation(prog_phong, "light")
u_m_material_colors = getuniformlocation(prog_phong, "material_colors")
u_m_light_colors = getuniformlocation(prog_phong, "light_colors")
u_s_shininess = getuniformlocation(prog_phong, "shininess")
u_t_img = getuniformlocation(prog_phong, "img")
u_s_scale = getuniformlocation(prog_phong, "scale")

a_vertex = getattriblocation(prog_phong, "vertex")
a_normal = getattriblocation(prog_phong, "normal")
a_tex = getattriblocation(prog_phong, "tex")

Shared Var a_vertex_s: Natural = getattriblocation(prog_shadow, "vertex")

Shared Var u_m_pv_s: Natural = getuniformlocation(prog_shadow, "pv_matrix")
Shared Var u_m_m_s: Natural = getuniformlocation(prog_shadow, "m_matrix")
Shared Var u_v_light_s: Natural = getuniformlocation(prog_shadow, "light_direction")
Shared Var u_v_n_s: Natural = getuniformlocation(prog_shadow, "plane_normal")
Shared Var u_v_p_s: Natural = getuniformlocation(prog_shadow, "point_in_plane")
